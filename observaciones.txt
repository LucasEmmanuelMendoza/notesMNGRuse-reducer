-La lógica de javascript va adentro de llaves.
-JSX revuelve UN solo elemento.
-Practicar ambos retornos de un componente:
    1)Return explícito: export const Note = ({content}) =>{
        return(
            <div>
                ...
            </div>            
        )
    }
    2)Return implícito: export const Note = ({content}) => (
        <div>
            ...
        </div>
    )
    
-EJEMPLO Props:
export const Note = ({ title, text }) => (
    <div>
        <h1>{title}</h1>
        <p>{text}</p>
    </div>
);

import { Note } from "./Note";

export const NotesContainer = ({ notes }) => (
    <div>
        {notes.map((note) => (
            <Note key={note.id} title={note.title} text={note.text} />
        ))}
    </div>
);

-Al pasar los componentes de la single page a varias funciones e importando el dispatch del contexto,
Voy a poder declarar, por ejemplo, en Note, las funciones de deleteNote, editNote, 
selectNote, etc, sin tener que declararla en el componente padre, pasarla a
notesContainer, después a cada Note y recién ahí usarla.

-Linea 283: 
    /*Error: La función InputNote está definida dentro del componente NotesManager, y accede 
    directamente a state.inputTitle y state.inputText. Pero React no permite que un componente
    acceda a props que no se le pasaron. Como InputNote está usando state.inputTitle directamente,
    debería apsarle esas props también si quiero que sea reutilizable. */